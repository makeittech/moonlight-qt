name: Test Steam Deck Build

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest
    env:
      XDG_DATA_HOME: ${{ github.workspace }}/.local/share
      XDG_CONFIG_HOME: ${{ github.workspace }}/.config
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Flatpak environment
      run: |
        echo "Setting up Flatpak environment..."
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder
        
        # Set up Flatpak environment variables
        export XDG_DATA_HOME="$HOME/.local/share"
        export XDG_CONFIG_HOME="$HOME/.config"
        export XDG_CACHE_HOME="$HOME/.cache"
        
        # Configure Flatpak for user installation
        flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        
        # Update remote list and refresh
        flatpak --user remote-list
        flatpak --user remote-info flathub org.kde.Platform
        
        # Refresh the remote to ensure it's properly configured
        flatpak --user remote-refresh flathub
        
        # Check available runtimes
        echo "Checking available KDE Platform runtimes..."
        flatpak --user remote-ls flathub | grep org.kde.Platform || echo "No KDE Platform runtimes found"
        flatpak --user remote-ls flathub | grep org.kde.Sdk || echo "No KDE SDK runtimes found"
        
        # Install required runtimes for user (using available versions)
        flatpak --user install --assumeyes org.kde.Platform//23.08 org.kde.Sdk//23.08 || true
        
        echo "Flatpak setup complete"
    
    - name: Build test Flatpak
      run: |
        echo "Building test Flatpak package..."
        
        # Create build directory
        mkdir -p build-test
        
        # Build the Flatpak (dependencies already installed)
        flatpak-builder \
          --force-clean \
          --user \
          --repo=repo-test \
          build-test \
          moonlight-steamdeck.yml
        
        echo "Test build completed"
    
    - name: Create test bundle
      run: |
        echo "Creating test Flatpak bundle..."
        
        # Create bundle
        flatpak build-bundle repo-test moonlight-steamdeck-test.flatpak com.moonlight_stream.Moonlight
        
        echo "Test bundle created"
    
    - name: Test build completion
      run: |
        echo "‚úÖ Build test completed successfully!"
        echo "üì¶ Flatpak bundle created: moonlight-steamdeck-test.flatpak"
        echo "üéÆ Ready for Steam Deck installation"
        
        # Check file size
        if [ -f moonlight-steamdeck-test.flatpak ]; then
          size=$(du -h moonlight-steamdeck-test.flatpak | cut -f1)
          echo "üìä Bundle size: $size"
        else
          echo "‚ùå Bundle file not found!"
          exit 1
        fi
    
    - name: Upload test artifact
      uses: actions/upload-artifact@v4
      with:
        name: moonlight-steamdeck-test
        path: moonlight-steamdeck-test.flatpak
        retention-days: 7