version: 0.0.0.{build}

clone_depth: 1

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      QTDIR: C:\Qt\5.14\msvc2017_64
      ARCH: x64
    - APPVEYOR_BUILD_WORKER_IMAGE: macOS
      BUILD_TARGET: macos
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      QTDIR: C:\Qt\5.14\msvc2017
      ARCH: x86
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1604
      BUILD_TARGET: steamlink
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
      BUILD_TARGET: linux

install:
  - sh: '[ "$BUILD_TARGET" != macos ] || nvm use node'
  - sh: '[ "$BUILD_TARGET" != macos ] || npm install --global create-dmg'
  - sh: '[ "$BUILD_TARGET" != steamlink ] || sudo apt install -y libc6:i386 libstdc++6:i386'
  - sh: '[ "$BUILD_TARGET" != steamlink ] || git clone --depth=1 https://github.com/ValveSoftware/steamlink-sdk.git $HOME/steamlink-sdk'
  - sh: '[ "$BUILD_TARGET" != linux ] || sudo add-apt-repository ppa:savoury1/multimedia'
  - sh: '[ "$BUILD_TARGET" != linux ] || sudo add-apt-repository ppa:savoury1/ffmpeg4'
  - sh: '[ "$BUILD_TARGET" != linux ] || sudo apt install -y qt5-default qtbase5-dev qtquickcontrols2-5-dev libqt5svg5-dev libgl1-mesa-dev libegl1-mesa-dev libxkbcommon-dev wayland-protocols libopus-dev libva-dev libvdpau-dev libsdl2-dev qtdeclarative5-dev libssl-dev libsdl2-ttf-dev libavcodec-dev libavutil-dev'

before_build:
  - 'git submodule update --init --recursive'
  - cmd: 'set PATH=%PATH%;%QTDIR%\bin;%ProgramFiles(x86)%\WiX Toolset v3.11\bin'
  - cmd: 'set /p VERSION=<app\version.txt'
  - sh: 'export VERSION=`cat app/version.txt`'

build_script:
  - cmd: 'scripts\generate-installers.bat Debug %ARCH%'
  - cmd: 'scripts\generate-installers.bat Release %ARCH%'
  - sh: '[ "$BUILD_TARGET" != linux ] || qmake moonlight-qt.pro -spec linux-g++'
  - sh: '[ "$BUILD_TARGET" != linux ] || make -j$(nproc) debug'
  - sh: '[ "$BUILD_TARGET" != linux ] || make -j$(nproc) release'
  - sh: '[ "$BUILD_TARGET" != macos ] || scripts/generate-dmg.sh Release'
  - sh: '[ "$BUILD_TARGET" != steamlink ] || STEAMLINK_SDK_PATH=$HOME/steamlink-sdk scripts/build-steamlink-app.sh'

after_build:
  - cmd: 'appveyor PushArtifact build\installer-%ARCH%-Release\MoonlightSetup-%ARCH%-%VERSION%.exe -FileName MoonlightSetup-%ARCH%-r%APPVEYOR_BUILD_NUMBER%.exe'
  - cmd: 'appveyor PushArtifact build\installer-%ARCH%-Release\MoonlightPortable-%ARCH%-%VERSION%.zip -FileName MoonlightPortable-%ARCH%-r%APPVEYOR_BUILD_NUMBER%.zip'
  - cmd: 'appveyor PushArtifact build\symbols-%ARCH%-Release\MoonlightDebuggingSymbols-%ARCH%-%VERSION%.zip -FileName MoonlightDebuggingSymbols-%ARCH%-r%APPVEYOR_BUILD_NUMBER%.zip'
  - sh: '[ "$BUILD_TARGET" != steamlink ] || appveyor PushArtifact build/installer-release/Moonlight-SteamLink-$VERSION.zip -FileName Moonlight-SteamLink-r$APPVEYOR_BUILD_NUMBER.zip'
  - sh: '[ "$BUILD_TARGET" != macos ] || appveyor PushArtifact build/installer-Release/Moonlight-$VERSION.dmg -FileName Moonlight-r$APPVEYOR_BUILD_NUMBER.dmg'

deploy: off
