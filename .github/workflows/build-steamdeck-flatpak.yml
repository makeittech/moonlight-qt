name: Build Steam Deck Flatpak

on:
  push:
    tags:
      - 'v*'
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      version:
        description: 'Custom version (optional)'
        required: false
        default: ''

jobs:
  build-flatpak:
    runs-on: ubuntu-latest
    env:
      XDG_DATA_HOME: ${{ github.workspace }}/.local/share
      XDG_CONFIG_HOME: ${{ github.workspace }}/.config
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for versioning
        submodules: recursive
    
    - name: Debug - List files
      run: |
        echo "Current directory: $(pwd)"
        echo "Files in current directory:"
        ls -la
        echo "Manifest file exists:"
        ls -la moonlight-steamdeck.yml || echo "Manifest file not found"
    
    - name: Setup Flatpak environment
      run: |
        echo "Setting up Flatpak environment..."
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder
        
        # Set up Flatpak environment variables
        export XDG_DATA_HOME="$HOME/.local/share"
        export XDG_CONFIG_HOME="$HOME/.config"
        export XDG_CACHE_HOME="$HOME/.cache"
        
        # Configure Flatpak for user installation
        flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        
        # Update remote list and refresh
        flatpak --user remote-list
        flatpak --user remote-info flathub org.kde.Platform//23.08
        
        # Refresh the remote to ensure it's properly configured
        flatpak --user remote-refresh flathub
        
        # Check available runtimes
        echo "Checking available KDE Platform runtimes..."
        flatpak --user remote-ls flathub | grep org.kde.Platform || echo "No KDE Platform runtimes found"
        flatpak --user remote-ls flathub | grep org.kde.Sdk || echo "No KDE SDK runtimes found"
        
        # Install required runtimes for user (using available versions)
        flatpak --user install --assumeyes org.kde.Platform//23.08 org.kde.Sdk//23.08 || true
        
        echo "Flatpak setup complete"
    
    - name: Build Flatpak
      run: |
        echo "Building Flatpak package..."
        
        # Create build directory
        mkdir -p build
        
        # Build the Flatpak (dependencies already installed)
        flatpak-builder \
          --force-clean \
          --user \
          --install-deps-from=flathub \
          --repo=repo \
          build \
          moonlight-steamdeck.yml
        
        echo "Build completed"
    
    - name: Create bundle
      run: |
        echo "Creating Flatpak bundle..."
        
        # Create bundle
        flatpak build-bundle repo moonlight-steamdeck.flatpak com.moonlight_stream.Moonlight
        
        echo "Bundle created"
    
    - name: Get version info
      id: version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          VERSION="${{ github.event.inputs.version }}"
        elif [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION="${GITHUB_REF#refs/tags/}"
        else
          VERSION="$(git describe --tags --abbrev=0 2>/dev/null || echo 'v6.1.0')-$(git rev-parse --short HEAD)-$(date +%Y%m%d)"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: Check build output
      run: |
        echo "Checking build output..."
        if [ -f moonlight-steamdeck.flatpak ]; then
          echo "✅ Flatpak build completed successfully"
          ls -la moonlight-steamdeck.flatpak
        else
          echo "❌ Flatpak build failed - output file not found"
          echo "Current directory contents:"
          ls -la
          exit 1
        fi
    
    - name: Rename artifact
      run: |
        mv moonlight-steamdeck.flatpak moonlight-steamdeck-${{ steps.version.outputs.version }}.flatpak
    
    - name: Create release notes
      run: |
        cat > "RELEASE_NOTES_${{ steps.version.outputs.version }}.md" << EOF
        # Moonlight Steam Deck Flatpak v${{ steps.version.outputs.version }}
        
        ## Release Information
        - **Version**: ${{ steps.version.outputs.version }}
        - **Build Date**: $(date)
        - **Git Commit**: $(git rev-parse --short HEAD)
        - **Git Tag**: $(git describe --tags --abbrev=0 2>/dev/null || echo "none")
        - **Build Type**: Steam Deck Optimized
        
        ## Installation Instructions
        
        ### Method 1: Via Terminal
        \`\`\`bash
        flatpak install moonlight-steamdeck-${{ steps.version.outputs.version }}.flatpak
        \`\`\`
        
        ### Method 2: Via Discover App
        1. Copy \`moonlight-steamdeck-${{ steps.version.outputs.version }}.flatpak\` to your Steam Deck
        2. Open Discover app
        3. Click "Install" on the Flatpak file
        
        ### Method 3: Add to Steam
        1. Open Steam in Desktop Mode
        2. Go to Games → Add a Non-Steam Game to My Library
        3. Browse to \`/usr/bin/flatpak\`
        4. Set launch options to: \`run com.moonlight_stream.Moonlight\`
        
        ## Steam Deck Optimizations
        - Enhanced gamepad support with Steam Deck controllers
        - Full hardware access for optimal performance
        - Steam integration for virtual gamepad support
        - Optimized for Steam Deck's display and audio systems
        
        ## Features
        - Game streaming from NVIDIA GeForce Experience or Sunshine
        - Low latency streaming optimized for gaming
        - Full controller support
        - 4K HDR streaming support
        - Audio streaming with 5.1/7.1 surround sound
        
        ## System Requirements
        - Steam Deck (or compatible Linux system)
        - Network connection to host PC
        - Host PC running GeForce Experience or Sunshine
        
        ## Troubleshooting
        If you encounter issues:
        1. Ensure your host PC is running GeForce Experience or Sunshine
        2. Check network connectivity between devices
        3. Verify firewall settings allow Moonlight traffic
        4. Try running in Desktop Mode if Game Mode has issues
        
        ## Support
        For support, visit: https://github.com/moonlight-stream/moonlight-qt
        EOF
    
    - name: Upload Flatpak artifact
      uses: actions/upload-artifact@v4
      with:
        name: moonlight-steamdeck-${{ steps.version.outputs.version }}
        path: |
          moonlight-steamdeck-${{ steps.version.outputs.version }}.flatpak
          RELEASE_NOTES_${{ steps.version.outputs.version }}.md
        retention-days: 30
    
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          moonlight-steamdeck-${{ steps.version.outputs.version }}.flatpak
          RELEASE_NOTES_${{ steps.version.outputs.version }}.md
        body_path: RELEASE_NOTES_${{ steps.version.outputs.version }}.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}